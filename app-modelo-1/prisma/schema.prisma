// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id
  givenName  String   @map("given_name")
  familyName String   @map("family_name")
  email      String   @unique
  role       String
  imageUrl   String?  @map("image_url")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("users")
}

model Ingredient {
  id                  String   @id
  name                String
  slug                String   @unique
  description         String?
  measureUnitClass    String   @map("measure_unit_class")
  measureUnit         String   @map("measure_unit")
  measureUnitQuantity Float    @map("measure_unit_quantity")
  price               Decimal  @db.Decimal(10, 2)
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @default(now()) @updatedAt @map("updated_at")

  Products            Product[]
  IngredientOnProduct IngredientOnProduct[]

  @@map("ingredients")
}

model Product {
  id              String   @id
  name            String
  slug            String   @unique
  description     String?
  preparationTime Int      @map("preparation_time")
  yield           Int
  annotation      String?
  recipe          String?
  profitMargin    Float    @map("profit_margin")
  sellingPrice    Decimal  @map("selling_price") @db.Decimal(10, 2)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at")

  Ingredients         Ingredient[]
  IngredientOnProduct IngredientOnProduct[]

  @@map("products")
}

model IngredientOnProduct {
  ingredientId String   @map("ingredient_id")
  productId    String   @map("product_id")
  quantity     Float
  measureUnit  String   @map("measure_unit")
  assignedAt   DateTime @default(now()) @map("assigned_at")

  Ingredient Ingredient @relation(fields: [ingredientId], references: [id])
  Product    Product    @relation(fields: [productId], references: [id])

  @@id([ingredientId, productId])
  @@map("ingredients_on_products")
}
